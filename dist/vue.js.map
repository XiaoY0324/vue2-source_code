{"version":3,"file":"vue.js","sources":["../src/compiler/generate.js","../src/compiler/parser.js","../src/compiler/index.js","../src/vdom/patch.js","../src/lifecycle.js","../src/utils.js","../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/initMixin.js","../src/vdom/index.js","../src/render.js","../src/index.js"],"sourcesContent":["const defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g; // 匹配双花括号 {{}}\n\n// 数组转对象 [{ name: 'aaa', value: 'bbb' }] => { aaa: 'bbb' }\nfunction genProps(attrs) {\n  let str = '';\n\n  for (let i = 0; i < attrs.length; i++) {\n    let attr = attrs[i];\n\n    if (attr.name === 'style') { // style: \"color: red; background: blue;\"\n      let styleObj = {};\n\n      attr.value.replace(/([^;:]+)\\:([^;:]+)/g, function() {\n        styleObj[arguments[1]] = arguments[2];\n      });\n\n      attr.value = styleObj;\n    }\n\n    str += `${ attr.name }: ${ JSON.stringify(attr.value) },`\n  }\n\n  return `{${ str.slice(0, -1) }}` // 删掉多余的逗号\n}\n\n// 检查子节点 递归生成 code\nfunction gen(node) {\n  if (node.type == 1) {\n    // 节点类型\n    return generate(node);\n  } else {\n    let text = node.text;\n\n    if (!defaultTagRE.test(text)) {\n      // 文本内容不包含双花括号\n      return `_v(\"${ text }\")`;\n    } else {\n      // 双花括号内的当做变量进行拼接 -> hello {{ msg }} 你好呀\n      let tokens = [];\n      let match;\n      // {{}} 结束索引 也是下一次遍历的开始索引 \n      // defaultTagRE.lastIndex 也重置为 0，因为正则全局匹配和 exec 有冲突\n      // 每次匹配完要重置下标\n      let lastIdx = defaultTagRE.lastIndex = 0; \n\n      while(match = defaultTagRE.exec(text)) {\n        // 匹配到了 {{}}\n        let startIdx = match.index; // 开始索引\n\n        if (startIdx > lastIdx) {\n          tokens.push(JSON.stringify(text.slice(lastIdx, startIdx)));\n        }\n\n        // 花括号内变量 考虑换行需要 trim\n        // 花括号内可能是个对象，为了避免隐式转为 [object Object]\n        // 使用 _s 包装，_s 其实就是调用了 JSON.stringify()\n        tokens.push(`_s(${ match[1].trim() })`);\n        \n        lastIdx = startIdx + match[0].length; // 结束索引\n      }\n\n      // 截取最好一段 比如 \"hello {{ msg }} 你好呀\" 中的 \"你好呀\"\n      if (lastIdx < text.length) {\n        tokens.push(JSON.stringify(text.slice(lastIdx)));\n      }\n\n      return `_v(${ tokens.join('+') })`;\n    }\n  }\n}\n\n// 获取 ast 节点的儿子\nfunction genChildren(node) {\n  let children = node.children; // 获取儿子\n\n  if (children) {\n    // 递归拼接\n    return children.map(c => gen(c)).join(',');\n  }\n\n  return false;\n}\n\n\n// 生成类似 _c('div', { id: 'app', a: 1 }, _v('hello')) 这样的代码片段 也有可能是下面这种哦\n// _c('div', { id: 'app', a: 1 }, _c('span', { id: 'span'}, _v('套娃子节点')))\n// _c 表示创建元素的虚拟节点方法 _v 表示创建文本的虚拟节点方法\nexport function generate(astRoot) { \n  let children = genChildren(astRoot);\n\n  // 遍历 ast 树，将树拼接成字符串\n  let code = `_c(\"${ astRoot.tag }\", ${\n    astRoot.attrs.length ? genProps(astRoot.attrs) : 'undefined'\n  }${\n    children ? `,${ children }` : '' \n  })`;\n\n  return code;\n}","const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`; // 匹配标签名\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`; // 获取标签名\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 匹配开始标签\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`); // 匹配闭合标签\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/; // 匹配属性的\nconst startTagClose = /^\\s*(\\/?)>/; // 匹配标签结束的 > 符号\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g; // 匹配双花括号 {{}}\n\n// 将解析后的结果 通过栈组装成一个 ast 树结构\nfunction createAstElement(tagName, attrs) {\n  return {\n    tag: tagName,\n    type: 1, // 元素类型\n    children: [],\n    parent: null,\n    attrs\n  }\n}\n\nlet root = null; // 树的根节点\nlet stack = []; // 保存每个节点的栈\n\n// 开始标签的处理方法\nfunction start(tagName, attrs) {\n  // console.log('start', tagName, attrs);\n  // 构建 ast 语法树\n  let element = createAstElement(tagName, attrs);\n  // 取出栈中的父节点 做节点关联\n  let parent = stack[stack.length - 1];\n\n  if (!root) {\n    root = element;\n  }\n\n  element.parent = parent; // 记录父节点是谁\n\n  if (parent) {\n    parent.children.push(element);\n  }\n  stack.push(element); // 入栈\n}\n\n// 结束标签的处理方法\nfunction end(tagName) {\n  // console.log('end tag:', tagName);\n  let last = stack.pop(); // 弹出首位\n\n  if (last.tag != tagName) {\n    throw new Error('标签闭合有误');\n  }\n}\n\n// 文本标签的处理方法\nfunction chars(text) {\n  text = text.replace(/\\s/g, '');\n\n  // 取出栈中的父节点 做节点关联\n  let parent = stack[stack.length - 1];\n  \n  if (text) {\n    parent.children.push({\n      type: 3, // 文本标签\n      text\n    });\n  }\n}\n\n// 将模板转成 ast 语法树\nexport function parserHTML(html) {\n  // 解析完毕后 删除标签\n  function advance(len) {\n    html = html.substring(len);\n  }\n\n  // 解析开始标签\n  function parseStartTag(){\n    const start = html.match(startTagOpen);\n    if(start){\n        // 把标签和属性通过正则组装成对象\n        const match = {\n            tagName:start[1],\n            attrs:[]\n        }\n        advance(start[0].length);\n        let attr,end;\n        while(!(end = html.match(startTagClose)) && (attr = html.match(attribute))){\n            advance(attr[0].length);\n            match.attrs.push({ name:attr[1], value:attr[3] });\n        }\n        if(end){\n            advance(end[0].length);\n            return match\n        }\n    }\n}\n\n  // 看看解析的内容是否存在 存在就不停解析\n  while(html) {\n     // 匹配开始或结束标签前面的 <\n    let startOrEnd = html.indexOf('<');\n\n    // 说明当前模板开头可能为开始标签<div>或结束标签</div>\n    if (startOrEnd == 0) {\n      // 尝试匹配开始标签 并把标签转成对象\n      const startTagMatch = parseStartTag(html); \n      \n      // 当前为开始标签\n      if (startTagMatch) {\n        // 处理开始标签转成的对象\n        start(startTagMatch.tagName, startTagMatch.attrs);\n        continue;\n      }\n\n      // 处理结束标签\n      const endTagMatch = html.match(endTag);\n\n      if (endTagMatch) {\n        // 当前为结束标签\n        end(endTagMatch[1]);\n        advance(endTagMatch[0].length);\n      }\n    }\n\n    // 处理文本 走到这里说明当前 html 为 123</div> 的\n    let text;\n\n    if (startOrEnd >= 0) {\n      // 截取文本\n      text = html.substring(0, startOrEnd);\n    }\n\n    if (text) {\n      // 如果文本有值 处理文本并干掉文本\n      chars(text);\n      advance(text.length);\n      continue;\n    }\n  }\n\n  return root;\n}\n","import { generate } from \"./generate\";\nimport { parserHTML } from \"./parser\";\n\n// 模板编译原理\nexport function compileToFunctions(html) {\n  // 1. 将模板转成 ast 语法树\n  let astRoot = parserHTML(html);\n  // 2. 代码生成(根据树，生成 render 方法内部代码)\n  //     比如 _c('div', { id: 'app', a: 1 }, _v(\"hello\"+_s(msg)+\"你好呀\"))\n  let code = generate(astRoot);\n\n  // 3. 把生成的代码包装成 render (敲黑板)\n  //    使用 Function 把字符串变成函数\n  //    使用 with 保证模板上的变量取自 this，后续调用 render.call(vm) 即可\n  let render = new Function(`with(this) { return ${ code } }`); \n  // console.log(render, 'render');\n  return render;\n}","/**\n * @description dom diff & 生成虚拟 dom 方法\n * @param { Element | Object } el 首次为真实 dom 节点，后续为虚拟 dom \n * @param { Object } vnode 虚拟 dom 对象 \n */\nexport function patch(el, vnode) {\n  // 首次渲染，el 为 vm.$el 是个真实节点, 此时把 vnode 生成真实 dom，整个替换\n  if (el.nodeType == 1) {\n    const parentElm = el.parentNode; // 找到挂载节点的父节点\n    const newElm = createElm(vnode); // 根据虚拟节点 创建真实节点\n\n    parentElm.insertBefore(newElm, el.nextSibling); // 放在挂载节点的下一个元素\n    parentElm.removeChild(el); // 删除掉挂载节点\n  }\n}\n\n// 创建真实 dom\nfunction createElm(vnode) {\n  let { tag, data, children, text, vm } = vnode;\n\n  if (typeof tag === 'string') { \n    // 元素节点\n    // 把当前真实节点挂载到虚拟节点的 elm 属性上，方便下层使用\n    vnode.elm = document.createElement(tag); \n\n    // 处理子节点(树的深度遍历)\n    children.forEach(child => {\n      // 插入到父真实节点上\n      // console.log(child);\n      vnode.elm.appendChild(createElm(child));\n    });\n  } else {\n    // 文本节点\n    // console.log('------text-------', text, vnode);\n    vnode.elm = document.createTextNode(text);\n  }\n\n  console.log(vnode.elm);\n  return vnode.elm;\n}","import { patch } from \"./vdom/patch\";\n\nexport function lifecycleMixin(Vue) {\n  // 生成真实 dom 的方法\n  Vue.prototype._update = function(vdom) {\n    const vm = this;\n    // console.log(vm.$el, '_updata', vdom);\n    // 既有初始化，又有更新\n\n    patch(vm.$el, vdom); // diff 来啦\n  }\n}\n\nexport function mountComponent(vm, el) {\n  // 更新函数 数据变化后 会再次调用此函数\n  let updataComponent = () => {\n    // 调用 render 函数，生成虚拟 dom\n    let vdom = vm._render();\n\n    console.log(vdom, '虚拟dom');\n    // 用虚拟 dom 生成真实 dom\n    vm._update(vdom);\n  }\n\n  updataComponent();\n}","export function isFunction(val) {\n  return typeof val === 'function';\n}\n\nexport function isObject(val) {\n  return typeof val !== 'null' && typeof val === 'object'; \n}\n\nexport function isArray(val) {\n  return Object.prototype.toString.call(val) === '[object Array]';\n}","// 这里不对数组原型做操作，只针对 data 中的数组，增加了一层方法拦截\n let oldArrayPrototype = Array.prototype; \n// 挂载老的原型对象到 arrayMethod 上，arrayMethod.__proto__ 能拿到 oldArrayPrototype\nlet arrayMethod = Object.create(oldArrayPrototype); \n\n// 只有这七个方法修改了原数组 所以要重写\nlet methods = ['push', 'pop', 'splice', 'shift', 'unshift', 'reverse', 'sort'];\n\nmethods.forEach(method => {\n  // 先找自己身上，找不到去原型对象上找「arrayMethod 的原型对象是 oldArrayPrototype」\n  // 比如 push 方法可以传多个参数，所以这里通过扩展运算符拿到参数列表\n  arrayMethod[method] = function(...args) {\n    // 调用原有数组方法\n    oldArrayPrototype[method].call(this, ...args);\n\n    let inserted = null; // 新插入的元素\n\n    // 对新增的元素进行重新劫持，新增数组元素的方法只有 splice、push、unshift\n    switch(method) {\n      case 'splice':\n        // splice 第二个参数后，就是新增的元素\n        inserted = args.slice(2);\n      case 'push':\n      case 'unshift':\n        // push 和 unshift 传入的元素即为新增元素\n        inserted = args;\n        break;\n    }\n\n    // 遍历 inserted，需要劫持的增加数据劫持，但是数据劫持的方法在 Observer 类上\n    // 我们取巧的把 Observer 类的实例挂载到当前操作的数组上 叫 __ob__，具体见 Observer 中实现\n    let ob = this.__ob__;\n\n    // 接着劫持 本身是个数组\n    if (inserted) ob.observeArray(inserted);\n  }\n});\n\nexport default arrayMethod;","import { isArray, isObject } from \"../utils\";\nimport arrayMethod from \"./array\";\n\n// 观察者类\nclass Observer {\n  constructor(val) {\n    // 给对象和数组添加一个自定义属性，用于数组新增元素时的再次劫持\n    // 不过切记 __ob__ 属性不能被枚举，不然如果 val 是个对象的话，就会把 __ob__ 也劫持\n    // 这也是我们看到所有的 Vue 变量都有 __ob__ 属性的原因\n    Object.defineProperty(val, '__ob__', {\n      value: this,\n      enumerable: false\n    });\n\n    if (isArray(val)) {\n      // 如果是 val 数组，修改原型方法 这里就不考虑兼容 ie 了\n      // 这里只针对 data 中的数组，没有重写 Array.prototype 上的方法\n      val.__proto__ = arrayMethod;\n      this.observeArray(val);\n    } else {\n      this.walk(val); // 遍历属性进行劫持\n    }\n  }\n\n  // 递归遍历数组，对数组内部的对象再次重写 比如 [{}]  [[]]\n  // 需要注意的是: 数组套对象的话，修改对象属性，也会触发更新，比如：\n  // vm.arr[0].a = 100 ----> 触发更新\n  // vm.arr[0] = 100   ----> 不会触发更新\n  observeArray(val) {\n    // 调用 observe 方法，数组内元素如果不是对象，则不会劫持\n    val.forEach(itm => observe(itm));\n  }\n\n  // 遍历对象\n  walk(data) {\n    Object.keys(data).forEach(key => {\n      // 使用 defineProperty 重新定义\n      defineReactive(data, key, data[key]);\n    })\n  }\n}\n\n// vue2 慢的一个原因\n// 这里引出几条 vue2 的性能优化原则\n//   @1 不要把所有的数据都放在 data 中，闭包过多会损耗性能\n//   @2 尽量扁平化数据，不要嵌套多次，递归影响性能\n//   @3 不要频繁获取数据，会触发 get 方法，走 get 方法中的全部逻辑\n//   @4 如果数据某属性不需要响应式，可以使用 Object.freeze 冻结属性「源码里会跳过 defineReactive」\nfunction defineReactive(obj, key, value) {\n  observe(value); // 递归进行劫持\n  Object.defineProperty(obj, key, {\n    get() {\n      // 这里就形成一个闭包，每次执行 defineReactive 上下文都不会被释放\n      // 所以这就是 vue2 的性能瓶颈\n      return value;\n    },\n    set(newValue) {\n      if (newValue == value) return;\n      // console.log('触发set方法');\n      // 设置新值重新劫持 \n      observe(newValue); \n      value = newValue;\n    }\n  });\n}\n\nexport function observe(data) {\n  // 如果不是对象，直接返回「非对象类型不进行递归劫持」\n  if (!isObject(data)) return;\n\n  // 如果被劫持过，就不再进行劫持了\n  if (data.__ob__) return;\n\n  // 如果一个数据被劫持过了，就不要重复劫持了，这里用类来实现\n  // 劫持过的对象 把类的实例挂在到 data.__ob__\n  return new Observer(data);\n}","import { observe } from \"./observe\";\nimport { isFunction } from \"./utils\";\n\n// 统一的数据的初始化分发\nexport function initState(vm) {\n  const options = vm.$options;\n\n  if (options.data) {\n    initData(vm);\n  }\n}\n\n// 代理 -> 使用 vm.info 取到 vm.data.info「劫持过的 info」\nfunction proxyFn(vm, key, source) {\n  Object.defineProperty(vm, key, {\n    get() {\n      return vm[source][key]\n    },\n    set(newVal) {\n      vm[source][key] = newVal;\n    }\n  });\n}\n\nfunction initData(vm) {\n  // 数据的初始化\n\n  // 注意 data 可能是个对象 也可能是个函数\n  //   + 对象：根实例\n  //   + 函数：页面组件互相之间的数据隔离\n  let data = vm.$options.data;\n\n  // 注意修正 this，防止 data 函数执行 this 指向 window\n  // 把 data 赋值给 vm 实例一个变量上，这里取名 _data，作为实例的属性数据源\n  data = vm._data = isFunction(data) ? data.call(vm) : data;\n\n  // 数据劫持\n  observe(data);\n\n  // 取 data.info => vm._data.info 做了一层代理获取到劫持后的 info\n  // 这也是 vue 中我们可以用 this 访问和修改 data 中数据的原因\n  for (let key in data) {\n    proxyFn(vm, key, '_data');\n  }\n}","\nimport { compileToFunctions } from \"./compiler\";\nimport { mountComponent } from \"./lifecycle\";\nimport { initState } from \"./state\";\n\nexport function initMixin(Vue) {\n  // 后续组件化开发的时候，Vue.extend 可以创造一个子组件，子组件也可以调用 _init 方法\n  Vue.prototype._init = function(options) {\n    const vm = this;\n    \n    // 注意调用的时候是 实例._init, 所以这里的 this 指的是实例本身 \n    // 把用户的配置放到实例上, 这样在其他方法中都可以共享 options 了\n    vm.$options = options;\n\n    // 因为数据的来源有很多种，比如 data、props、computed 等，我们要做一个统一的数据的初始化『数据劫持』\n    initState(vm);\n\n    if (vm.$options.el) {\n      // 要将数据挂载到页面上『模板解析』\n      // console.log('页面要挂载');\n\n      // 现在数据已经被劫持了，数据变化需要更新视图(diff 算法更新需要更新的部分)\n      // 在 vue2 中，使用的是更符合前端思维的 template 而不是更灵活的 JSX\n      // vue3 template 写起来性能会高一些，内部做了很多优化，所以在 vue3 里面尽量不要使用 jsx\n\n      // 挂载到的 DOM 节点，其实最终用的都是 $mount 方法\n      // 处理 new Vue({ el })  写法\n      vm.$mount(vm.$options.el);\n    } \n  }\n\n  // 挂载节点的方法(如果 options 中不传 el 的话)\n  // 兼容 new Vue({}).$mount(el) 这种写法\n  Vue.prototype.$mount = function(el) {\n    const vm = this;\n    const opts = vm.$options;\n\n    el = document.querySelector(el); // 获取真实节点\n    vm.$el = el; // 真实元素挂载到实例上\n\n    if (!opts.render) {\n      // 模板编译\n      let template = opts.template;\n\n      if (!template && el) {\n        // outerHTML 取得是该元素和其所有子元素序列化后的字符串标签\n        template = el.outerHTML;\n      }\n\n      // compileToFunctions 为模板编译的方法，模板 -> js 对象 -> ast -> render code -> 生成 render 函数\n      let render = compileToFunctions(template); // el 节点本身\n\n      opts.render = render;\n    }\n\n    // opts.render 就是渲染函数\n    // console.warn(opts.render, 'opts.render');\n\n    // 开始组件挂载流程(生命周期方法)，也就是模板解析(变量渲染到dom上)\n    mountComponent(vm, el);\n  }\n}","// 创建虚拟 dom 节点 也就是 render 方法中  _c\nexport function createElement(vm, tag, data = {}, children) {\n  // console.log('createElement 方法', tag, data, children, vm);\n  return vnode(vm, tag, data, data.key, children, undefined); // key 挂在了虚拟dom上哦\n}\n\n // 创建虚拟文本节点 也就是 render 方法中  _v\nexport function createTextElement(vm, text) {\n  // console.log('createTextElement 方法', text, vm);\n  return vnode(vm, undefined, undefined, undefined, undefined, text);\n}\n\n// 虚拟dom (比 ast 数更自由，随意组合属性，哪怕不合法的属性)\nfunction vnode(vm, tag, data, key, children, text) {\n  return {\n    vm, \n    tag, \n    data, \n    key, \n    children,\n    text\n  }\n}","import { createElement, createTextElement } from \"./vdom\";\n\nexport function renderMixin(Vue) {\n  // 创建 render 函数需要的三个方法\n  Vue.prototype._c = function(tagName, data, ...children) { // createElement\n    const vm = this;\n\n    return createElement(vm, tagName, data, children);\n  }\n\n  Vue.prototype._v = function(text) { // createTextElement\n    const vm = this;\n\n    return createTextElement(vm, text);\n  }\n\n  // 转字符串\n  Vue.prototype._s = function(val) {\n    if (typeof val === 'object') return JSON.stringify(val);\n    return val;\n  }\n\n  // 把 vm.$options 上的 render 方法 挂载到原型链\n  Vue.prototype._render = function() {\n    const vm = this;\n\n    // 就是我们通过 ast 生成的 render 方法(或者原本就传了 render 方法)\n    let render = vm.$options.render;\n    \n    let vnode = render.call(vm);\n    \n    return vnode;\n  }\n}","import { initMixin } from './initMixin'; \nimport { lifecycleMixin } from './lifecycle';\nimport { renderMixin } from './render';\n\nfunction Vue(options) {\n  this._init(options);\n}\n\n// 在 Vue 原型链上扩展方法 \ninitMixin(Vue);\n\n// 原型链挂载 _render -> 生成虚拟 dom 方法\nrenderMixin(Vue);\n\n// 原型链挂载 _update -> 生成真实 dom 方法\nlifecycleMixin(Vue);\n\nexport default Vue;"],"names":["defaultTagRE","genProps","attrs","str","i","length","attr","name","styleObj","value","replace","arguments","JSON","stringify","slice","gen","node","type","generate","text","test","tokens","match","lastIdx","lastIndex","exec","startIdx","index","push","trim","join","genChildren","children","map","c","astRoot","code","tag","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","createAstElement","tagName","parent","root","stack","start","element","end","last","pop","Error","chars","parserHTML","html","advance","len","substring","parseStartTag","startOrEnd","indexOf","startTagMatch","endTagMatch","compileToFunctions","render","Function","patch","el","vnode","nodeType","parentElm","parentNode","newElm","createElm","insertBefore","nextSibling","removeChild","data","vm","elm","document","createElement","forEach","child","appendChild","createTextNode","console","log","lifecycleMixin","Vue","prototype","_update","vdom","$el","mountComponent","updataComponent","_render","isFunction","val","isObject","isArray","Object","toString","call","oldArrayPrototype","Array","arrayMethod","create","methods","method","args","inserted","ob","__ob__","observeArray","Observer","constructor","defineProperty","enumerable","__proto__","walk","itm","observe","keys","key","defineReactive","obj","get","set","newValue","initState","options","$options","initData","proxyFn","source","newVal","_data","initMixin","_init","$mount","opts","querySelector","template","outerHTML","undefined","createTextElement","renderMixin","_c","_v","_s"],"mappings":"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"}