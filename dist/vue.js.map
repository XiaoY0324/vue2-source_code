{"version":3,"file":"vue.js","sources":["../src/utils.js","../src/initGlobalAPI/index.js","../src/compiler/generate.js","../src/compiler/parser.js","../src/compiler/index.js","../src/observer/dep.js","../src/observer/scheduler.js","../src/observer/watcher.js","../src/vdom/patch.js","../src/lifecycle.js","../src/observer/array.js","../src/observer/index.js","../src/state.js","../src/initMixin.js","../src/vdom/index.js","../src/render.js","../src/index.js"],"sourcesContent":["export function isFunction(val) {\n  return typeof val === 'function';\n}\n\nexport function isObject(val) {\n  return typeof val !== 'null' && typeof val === 'object';\n}\n\nexport function isArray(val) {\n  return Object.prototype.toString.call(val) === '[object Array]';\n}\n\nconst callbacks = [];\nlet wating = false; // 防抖\n\n// 依次执行 nextTick 队列中的 callback\nfunction flushCallbacks() {\n  callbacks.forEach(cb => cb());\n  wating = false;\n}\n\n// 降级策略\nfunction timer(cb) {\n  let timerFn = () => {};\n\n  if (Promise) {\n    timerFn = () => {\n      Promise.resolve().then(cb);\n    };\n  } else if (MutationObserver) { // 微任务 监听节点变化的 api\n    let textNode = document.createTextNode(1); // 随便创建个文本节点来监听\n    let observe = new MutationObserver(cb); // 注册个回调\n\n    observe.observe(textNode, { // 监控文本节点变化 characterData 代表文本内容\n      characterData: true\n    });\n\n    timerFn = () => {\n      textNode.textContent = 2;\n    }\n  } else if (setImmediate) { // ie 才认的 api，性能略高于 setTimeout  \n    timerFn = () => {\n      setImmediate(cb);\n    }\n  } else {\n    // 再不支持 只能延时器了\n    timerFn = () => {\n      setTimeout(cb);\n    }\n  }\n  \n  timerFn();\n}\n\n\n// 源码中的调度器会优先调用 nextTick 方法(批量更新就调用)\n// 所以更新 dom 的操作会先入 callbacks 队列\nexport function nextTick(cb) {\n  callbacks.push(cb);\n\n  if (!wating) {\n    // vue3 不考虑兼容，这里直接 Promise.resolve.then(flushCallbacks)\n    // vue2 中考虑兼容性问题，有个降级策略\n    timer(flushCallbacks);\n    wating = true;\n  }\n}\n\n\n// 策略模式，针对不同的 key 去做合并\nconst strats = {};\n\n// 针对不同 key 的策略，这里写四个生命周期的合并为栗，method 等合并同理\n['beforeCreate', 'created', 'beforeMount', 'mounted'].forEach(method => {\n  strats[method] = function(curVal, mixinVal) {\n    if (mixinVal) {\n      // Vue.options 默认值为空对象，所以原始配置中 key 对应的生命周期函数这里可能是空的\n      // 首次是这样的，Vue.options = {}, options = { a, beforeCreate: function() {} }\n      // 第二次是这样的，Vue.options = { a, beforeCreate: [fn] }, options = { b, beforeCreate: function() {} }\n      if (curVal) { \n        // 函数数组进行合并\n        return curVal.concat(mixinVal);\n      } else {\n        // 公共配置没有生命周期，混入配置有，要把这些生命周期函数变为数组保存\n        return [mixinVal]\n      }\n    } else {\n      // 如果混入的 key 对应的值为空，直接使用原来的值\n      return curVal; \n    }\n  }\n});\n\nexport function mergeOptions(curOptions, mixinOptions) {\n  const res = {};\n\n  // 先遍历 Vue.options，如果混入 options 中该属性也存在，使用混入的变量替换\n  for (let key in curOptions) {\n    mergeField(key);\n  }\n\n  // 再遍历混入 options，如果某属性 Vue.options 没有，拷贝过来\n  for (let key in mixinOptions) {\n    if (!curOptions.hasOwnProperty(key)) {\n      mergeField(key);\n    }\n  }\n\n  // 合并配置\n  function mergeField(key) {\n    // 策略模式，针对不同的 key 进行合并(这里拿生命周期函数做示例)\n    if (strats[key]) {\n      res[key] = strats[key](curOptions[key], mixinOptions[key]);\n    } else {\n      // 优先使用新传递的属性区替换公共属性\n      res[key] = mixinOptions[key] || curOptions[key];\n    }\n  }\n\n  console.warn(res.data);\n  return res;\n}\n","import { mergeOptions } from \"../utils\";\n\n// 为 Vue 增加静态方法\nexport function initGlobalAPI(Vue) {\n  Vue.options = {}; // 所有的全局属性都会放到这个变量上\n\n  Vue.mixin = function(mixinOptions) {\n    // this 代表 Vue，静态属性 Vue.options\n    this.options = mergeOptions(this.options, mixinOptions);\n  }\n}\n\n","const defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g; // 匹配双花括号 {{}}\n\n// 数组转对象 [{ name: 'aaa', value: 'bbb' }] => { aaa: 'bbb' }\nfunction genProps(attrs) {\n  let str = '';\n\n  for (let i = 0; i < attrs.length; i++) {\n    let attr = attrs[i];\n\n    if (attr.name === 'style') { // style: \"color: red; background: blue;\"\n      let styleObj = {};\n\n      attr.value.replace(/([^;:]+)\\:([^;:]+)/g, function() {\n        styleObj[arguments[1]] = arguments[2];\n      });\n\n      attr.value = styleObj;\n    }\n\n    str += `${ attr.name }: ${ JSON.stringify(attr.value) },`\n  }\n\n  return `{${ str.slice(0, -1) }}` // 删掉多余的逗号\n}\n\n// 检查子节点 递归生成 code\nfunction gen(node) {\n  if (node.type == 1) {\n    // 节点类型\n    return generate(node);\n  } else {\n    let text = node.text;\n\n    if (!defaultTagRE.test(text)) {\n      // 文本内容不包含双花括号\n      return `_v(\"${ text }\")`;\n    } else {\n      // 双花括号内的当做变量进行拼接 -> hello {{ msg }} 你好呀\n      let tokens = [];\n      let match;\n      // {{}} 结束索引 也是下一次遍历的开始索引 \n      // defaultTagRE.lastIndex 也重置为 0，因为正则全局匹配和 exec 有冲突\n      // 每次匹配完要重置下标\n      let lastIdx = defaultTagRE.lastIndex = 0; \n\n      while(match = defaultTagRE.exec(text)) {\n        // 匹配到了 {{}}\n        let startIdx = match.index; // 开始索引\n\n        if (startIdx > lastIdx) {\n          tokens.push(JSON.stringify(text.slice(lastIdx, startIdx)));\n        }\n\n        // 花括号内变量 考虑换行需要 trim\n        // 花括号内可能是个对象，为了避免隐式转为 [object Object]\n        // 使用 _s 包装，_s 其实就是调用了 JSON.stringify()\n        tokens.push(`_s(${ match[1].trim() })`);\n        \n        lastIdx = startIdx + match[0].length; // 结束索引\n      }\n\n      // 截取最好一段 比如 \"hello {{ msg }} 你好呀\" 中的 \"你好呀\"\n      if (lastIdx < text.length) {\n        tokens.push(JSON.stringify(text.slice(lastIdx)));\n      }\n\n      return `_v(${ tokens.join('+') })`;\n    }\n  }\n}\n\n// 获取 ast 节点的儿子\nfunction genChildren(node) {\n  let children = node.children; // 获取儿子\n\n  if (children) {\n    // 递归拼接\n    return children.map(c => gen(c)).join(',');\n  }\n\n  return false;\n}\n\n\n// 生成类似 _c('div', { id: 'app', a: 1 }, _v('hello')) 这样的代码片段 也有可能是下面这种哦\n// _c('div', { id: 'app', a: 1 }, _c('span', { id: 'span'}, _v('套娃子节点')))\n// _c 表示创建元素的虚拟节点方法 _v 表示创建文本的虚拟节点方法\nexport function generate(astRoot) { \n  let children = genChildren(astRoot);\n\n  // 遍历 ast 树，将树拼接成字符串\n  let code = `_c(\"${ astRoot.tag }\", ${\n    astRoot.attrs.length ? genProps(astRoot.attrs) : 'undefined'\n  }${\n    children ? `,${ children }` : '' \n  })`;\n\n  return code;\n}","const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`; // 匹配标签名\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`; // 获取标签名\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 匹配开始标签\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`); // 匹配闭合标签\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/; // 匹配属性的\nconst startTagClose = /^\\s*(\\/?)>/; // 匹配标签结束的 > 符号\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g; // 匹配双花括号 {{}}\n\n// 将解析后的结果 通过栈组装成一个 ast 树结构\nfunction createAstElement(tagName, attrs) {\n  return {\n    tag: tagName,\n    type: 1, // 元素类型\n    children: [],\n    parent: null,\n    attrs\n  }\n}\n\nlet root = null; // 树的根节点\nlet stack = []; // 保存每个节点的栈\n\n// 开始标签的处理方法\nfunction start(tagName, attrs) {\n  // console.log('start', tagName, attrs);\n  // 构建 ast 语法树\n  let element = createAstElement(tagName, attrs);\n  // 取出栈中的父节点 做节点关联\n  let parent = stack[stack.length - 1];\n\n  if (!root) {\n    root = element;\n  }\n\n  element.parent = parent; // 记录父节点是谁\n\n  if (parent) {\n    parent.children.push(element);\n  }\n  stack.push(element); // 入栈\n}\n\n// 结束标签的处理方法\nfunction end(tagName) {\n  // console.log('end tag:', tagName);\n  let last = stack.pop(); // 弹出首位\n\n  if (last.tag != tagName) {\n    throw new Error('标签闭合有误');\n  }\n}\n\n// 文本标签的处理方法\nfunction chars(text) {\n  text = text.replace(/\\s/g, '');\n\n  // 取出栈中的父节点 做节点关联\n  let parent = stack[stack.length - 1];\n  \n  if (text) {\n    parent.children.push({\n      type: 3, // 文本标签\n      text\n    });\n  }\n}\n\n// 将模板转成 ast 语法树\nexport function parserHTML(html) {\n  // 解析完毕后 删除标签\n  function advance(len) {\n    html = html.substring(len);\n  }\n\n  // 解析开始标签\n  function parseStartTag(){\n    const start = html.match(startTagOpen);\n    if(start){\n        // 把标签和属性通过正则组装成对象\n        const match = {\n            tagName:start[1],\n            attrs:[]\n        }\n        advance(start[0].length);\n        let attr,end;\n        while(!(end = html.match(startTagClose)) && (attr = html.match(attribute))){\n            advance(attr[0].length);\n            match.attrs.push({ name:attr[1], value:attr[3] });\n        }\n        if(end){\n            advance(end[0].length);\n            return match\n        }\n    }\n}\n\n  // 看看解析的内容是否存在 存在就不停解析\n  while(html) {\n     // 匹配开始或结束标签前面的 <\n    let startOrEnd = html.indexOf('<');\n\n    // 说明当前模板开头可能为开始标签<div>或结束标签</div>\n    if (startOrEnd == 0) {\n      // 尝试匹配开始标签 并把标签转成对象\n      const startTagMatch = parseStartTag(html); \n      \n      // 当前为开始标签\n      if (startTagMatch) {\n        // 处理开始标签转成的对象\n        start(startTagMatch.tagName, startTagMatch.attrs);\n        continue;\n      }\n\n      // 处理结束标签\n      const endTagMatch = html.match(endTag);\n\n      if (endTagMatch) {\n        // 当前为结束标签\n        end(endTagMatch[1]);\n        advance(endTagMatch[0].length);\n      }\n    }\n\n    // 处理文本 走到这里说明当前 html 为 123</div> 的\n    let text;\n\n    if (startOrEnd >= 0) {\n      // 截取文本\n      text = html.substring(0, startOrEnd);\n    }\n\n    if (text) {\n      // 如果文本有值 处理文本并干掉文本\n      chars(text);\n      advance(text.length);\n      continue;\n    }\n  }\n\n  return root;\n}\n","import { generate } from \"./generate\";\nimport { parserHTML } from \"./parser\";\n\n// 模板编译原理\nexport function compileToFunctions(html) {\n  // 1. 将模板转成 ast 语法树\n  let astRoot = parserHTML(html);\n  // 2. 代码生成(根据树，生成 render 方法内部代码)\n  //     比如 _c('div', { id: 'app', a: 1 }, _v(\"hello\"+_s(msg)+\"你好呀\"))\n  let code = generate(astRoot);\n\n  // 3. 把生成的代码包装成 render (敲黑板)\n  //    使用 Function 把字符串变成函数\n  //    使用 with 保证模板上的变量取自 this，后续调用 render.call(vm) 即可\n  let render = new Function(`with(this) { return ${ code } }`); \n  // console.log(render, 'render');\n  return render;\n}","// 观察者收集器\n// 每个属性上需要挂载一个 wacher 收集器 dep (defineReactive 方法顶部闭包方式保存)， 用来收集自己的 wachers，因为一个属性如果在多个组件用，是要多个 watcher\nlet id = 0; // 为了保证唯一性，也给加个序号\n\nclass Dep {\n  constructor() {\n    this.id = id++;\n    this.subs = []; // 存放 watcher\n  }\n\n  depend() {\n    // Dep.target  dep 里要存放这个 watcher，watcher 要存放 dep，多对多的关系\n    if (Dep.target) {\n      // 这一步最终结果是 dep 和 wacher 是互相存\n      Dep.target.addDep(this);\n    }\n  }\n\n  addSub(watcher) {\n    this.subs.push(watcher);\n  }\n  \n  // 通知更新\n  notify() {\n    // 属性一改可能会更新 n 次\n    this.subs.forEach(watcher => watcher.update());\n  }\n}\n\nDep.target = null; // 静态属性\n\nexport function pushTarget(watcher) {\n  Dep.target = watcher;\n}\n\nexport function popTarget() {\n  Dep.target = null;\n}\n\nexport default Dep;","import { nextTick } from \"../utils\";\n\n// wactcher 调度 \nlet queue = [];\nlet has = {}; // 存放 wacher ID，防止相同 watcher 更新多次\nlet pending = false; \n\n// 清空 wacher 队列，每一个 watcher 都是一次更新操作(render + patch)\nfunction flushSchedulerQueue() {\n  for (let i = 0; i < queue.length; i++) {\n    queue[i].run(); // 更新\n  }\n\n  queue = [];\n  has = {};\n  pending = false;\n}\n\nexport function queueWatcher(watcher) {\n  let id = watcher.id;\n\n  if (has[id] == null) {\n    queue.push(watcher);\n    has[id] = true;\n\n    // 开启一次异步批处理更新(防抖)\n    if (!pending) {\n       console.log('dom 更新 run');\n       \n       // 不能使用延时器，不然我们想拿到更新后的 dom 节点，只能通过 setTimeout 去拿\n       // 而且，我们希望尽早更新，同步代码执行完毕会先执行微任务，而不想等 setTimeout\n      // setTimeout(flushSchedulerQueue, 0);\n\n      nextTick(flushSchedulerQueue);\n      pending = true;\n    }\n  }\n}\n\n","// Dep 上挂载 watcher 的方式\nimport { popTarget, pushTarget } from \"./dep\"; \nimport { queueWatcher } from \"./scheduler\";\n\nlet id = 0; // 每 new 一次 watcher，id++\n\n// 观察者类\nclass Watcher {\n  // exprOrFn: 可能是个表达式(计算属性)或者更新的函数(vm._update(vm._render()))或字符串(watch 创建的 watcher，第二个参数是 key)\n  // options：为 true 标识它是个渲染 watcher\n  constructor(vm, exprOrFn, cb, options) {\n    this.vm = vm;\n    this.exprOrFn = exprOrFn;\n    this.cb = cb;\n    this.user = !!options.user; // 是不是用户 watcher, 取布尔值\n    this.options = options;\n    this.id = id++; // watcher 类实例化计数\n    this.deps = [];\n    // 防止一个模板绑定两次相同的值 存两个 dep <span> {{ msg + msg }}}</span>\n    this.depsId = new Set(); \n\n    if (typeof exprOrFn == 'string') { // watch api 的 watcher\n      // 如果是 watch: { name: handler } 走到这里，此时 exprOrFn 就是 'name'\n      // 走到下面 this.get() 方法内部时，执行 pushTarget 函数会把 Dep.target = 本次 watch 的 watcher\n      // 然后执行 this.getter 方法，我们 下面方法中 for 循环取值，这会触发取值被走 get 方法 \n      // get 方法回去收集当前 Dep.target 也就是 watch API 创建的 watcher，至此完成此类 wacter 收集\n      this.getter = function() {\n        // watcher: { \"age.n\": handler } 取值需要改成 vm['age']['n']\n        let path = exprOrFn.split('.'); // [age, n]\n        let obj = vm;\n\n        for (let i = 0; i < path.length; i++) {\n          obj = obj[path[i]]\n        } \n\n        return obj\n      }\n    } else {\n      // 渲染 watcher\n      // render 方法会去 vm 上重新取值，生成虚拟 dom，我们这里把它重命名为 getter\n      this.getter = exprOrFn;\n    }\n\n    // 更新函数默认执行一次，首次渲染页面(生成虚拟 dom -> diff -> 真实 dom)\n    // this.value 代表初始的 value，也就是记录 oldValue\n    // watch api 的 watcher 会返回当前 key 对应的值，渲染 watcher 返回 undefined\n    this.value = this.get();\n    console.log(this.value, this);\n  }\n\n  // 重新取值并渲染，取值会调用 defineProperty.get 方法，我们让每个属性都能收集自己的 watcher(多对多的关系)\n  // 每个组件的渲染都会初始化一个 wacher，组件内属性跟 watcher 做绑定\n  // 每个属性可能有多个 watcher(全局的属性 msg 100 个组件使用，就会声明 100 个 wacher 实例跟 msg 做绑定)\n  // 同一个 watcher 实例可能对应 n 多属性，比如 A 组件内有 100 变量，该 watcher 会收集 100 个 dep 供后续使用\n  // 为了收集以上关系，我们声明一个 Dep 类\n  get() {\n    // console.log('dom 渲染');\n    // 注意，这里代码只有要更新页面时(getter 就是更新页面方法)，才会走\n    // 模板内绑定的变量，取值之前这里设置 Dep.target -> wacher\n    // 注意，普通的 vm.msg 取值不会走该方法，也就是普通的读取变量 Dep.target -> null\n    pushTarget(this);  \n    // 只有取值的时候，把当前 watcher 收集到当前属性的收集器 Dep 上，并渲染页面\n    // 也就是说，当前变量在模板中使用到了，才会去收集 watcher (没用到不取)\n    const value = this.getter();\n    // 取值之后 立马清空挂载的 wacher 实例\n    popTarget(); \n\n    return value;\n  } \n\n  // 双向收集\n  addDep(dep) {\n    let id = dep.id;\n\n    // 如果没存过这个 dep， 再存\n    if (!this.depsId.has(id)) {\n      this.depsId.add(id);\n      this.deps.push(dep);\n      dep.addSub(this);\n    }\n  }\n\n  // 存起来要更新的操作，交给调度器\n  update() {\n    // 缓存 wacher，多次调用先缓存，等会儿去重一起更新。\n    // 这就是为什么 vue 的数据更新是异步的\n    queueWatcher(this);\n  }\n\n  // 调度器更新实际调用的方法\n  run() {\n    // 渲染操作的更新方法，后续还有其他更新\n    // 更新后拿到新值\n    let newValue = this.get();\n    let oldValue = this.value;\n\n    this.value = newValue; // 更新 oldValue\n\n    if (this.user) { \n      // 用户自定义的 watcher 的话，调用 cb 方法，传入 oldValue 和 newValue\n      // 这个 cb 就是 watch: { name: handler } 中的 handler 啦\n      this.cb.call(this.vm, oldValue, newValue);\n    }\n  }\n}\n\nexport default Watcher;","/**\n * @description dom diff & 生成虚拟 dom 方法\n * @param { Element | Object } el 根 dom 节点\n * @param { Object } vnode 虚拟 dom 对象 \n */\nexport function patch(curElm, vnode) {\n  // 把 vnode 生成真实 dom，挂载节点整个替换\n  if (curElm.nodeType == 1) {\n    const parentElm = curElm.parentNode; // 找到挂载节点的父节点\n    const newElm = createElm(vnode); // 根据虚拟节点 创建真实节点\n\n    parentElm.insertBefore(newElm, curElm.nextSibling); // 放在挂载节点的下一个元素\n    parentElm.removeChild(curElm); // 删除掉挂载节点\n\n    return newElm; // 新的根节点返还 重新挂载到 vm.$el 上\n  }\n}\n\n// 创建真实 dom，并插入到页面(父节点)\nfunction createElm(vnode) {\n  let { tag, data, children, text, vm } = vnode;\n\n  if (typeof tag === 'string') { \n    // 元素节点\n    // 把当前真实节点挂载到虚拟节点的 elm 属性上，方便下层使用\n    vnode.elm = document.createElement(tag); \n\n    // 处理子节点(树的深度遍历)\n    children.forEach(child => {\n      // 插入到父真实节点上\n      // console.log(child);\n      vnode.elm.appendChild(createElm(child));\n    });\n  } else {\n    // 文本节点\n    // console.log('------text-------', text, vnode);\n    vnode.elm = document.createTextNode(text);\n  }\n\n  return vnode.elm;\n}","import Watcher from \"./observer/watcher\";\nimport { nextTick } from \"./utils\";\nimport { patch } from \"./vdom/patch\";\n\nexport function lifecycleMixin(Vue) {\n  // 生成真实 dom 的方法\n  Vue.prototype._update = function(vdom) {\n    const vm = this;\n    // console.log(vm.$el, '_updata', vdom);\n    // 既有初始化，又有更新\n\n    // 老节点被干掉了 使用新节点\n    vm.$el = patch(vm.$el, vdom); // diff 来啦\n  }\n\n  // nextTick 方法\n  Vue.prototype.$nextTick = nextTick;\n}\n\n// 后续每个组件渲染的时候都会有一个 watcher\nexport function mountComponent(vm, el) {\n  // 更新函数 数据变化后 会再次调用此函数\n  let updataComponent = () => {\n    // 调用 render 函数，生成虚拟 dom，用虚拟 dom 生成真实 dom\n    vm._update(vm._render());\n  }\n\n  // 注掉原有更新逻辑\n  // updataComponent();\n\n  // 传入 true 标识着他是一个渲染 watcher，后续还会有其他 watcher，这里做个标识\n  new Watcher(vm, updataComponent, () => {\n    console.log('更新视图啦');\n  }, true); \n}","// 这里不对数组原型做操作，只针对 data 中的数组，增加了一层方法拦截\n let oldArrayPrototype = Array.prototype; \n// 挂载老的原型对象到 arrayMethod 上，arrayMethod.__proto__ 能拿到 oldArrayPrototype\nlet arrayMethod = Object.create(oldArrayPrototype); \n\n// 只有这七个方法修改了原数组 所以要重写\nlet methods = ['push', 'pop', 'splice', 'shift', 'unshift', 'reverse', 'sort'];\n\nmethods.forEach(method => {\n  // 先找自己身上，找不到去原型对象上找「arrayMethod 的原型对象是 oldArrayPrototype」\n  // 比如 push 方法可以传多个参数，所以这里通过扩展运算符拿到参数列表\n  arrayMethod[method] = function(...args) {\n    // 调用原有数组方法\n    oldArrayPrototype[method].call(this, ...args);\n\n    let inserted = null; // 新插入的元素\n\n    // 对新增的元素进行重新劫持，新增数组元素的方法只有 splice、push、unshift\n    switch(method) {\n      case 'splice':\n        // splice 第二个参数后，就是新增的元素\n        inserted = args.slice(2);\n      case 'push':\n      case 'unshift':\n        // push 和 unshift 传入的元素即为新增元素\n        inserted = args;\n        break;\n    }\n\n    // 遍历 inserted，需要劫持的增加数据劫持，但是数据劫持的方法在 Observer 类上\n    // 我们取巧的把 Observer 类的实例挂载到当前操作的数组上 叫 __ob__，具体见 Observer 中实现\n    let ob = this.__ob__;\n\n    // 接着劫持 本身是个数组\n    if (inserted) ob.observeArray(inserted);\n\n    // 调用数组的 observer.dep 属性，触发更新\n    ob.dep.notify();\n  }\n});\n\nexport default arrayMethod;","import { isArray, isObject } from \"../utils\";\nimport arrayMethod from \"./array\"; // 数组结束(方法重写)\nimport Dep from \"./dep\";\n\n// 观察者类\n// 如果给对象新增一个属性不会触发视图更新(给对象本身也增加一个 dep，dep 中存 watcher，如果增加一个属性后，我就手动的触发 watcher 的更新)\nclass Observer {\n  constructor(val) {\n    // 给 Observer 实例增加一个 dep 属性，也就是 val.__ob__.dep\n    // 注意此时 val 可能是对象也可能是数组，数组我们是需要加的，用于调用七种方法是调用 dep.notify\n    // 对象加上也不影响，因为对象加属性是不会触发更新的(没有劫持)，而且后面实现对象 $set 需要使用到这个 dep\n    this.dep = new Dep(); \n\n    // 给对象和数组添加一个自定义属性，用于数组新增元素时的再次劫持\n    // 不过切记 __ob__ 属性不能被枚举，不然如果 val 是个对象的话，就会把 __ob__ 也劫持\n    // 这也是我们看到所有的 Vue 变量都有 __ob__ 属性的原因\n    Object.defineProperty(val, '__ob__', {\n      value: this,\n      enumerable: false\n    });\n\n    if (isArray(val)) { // 我希望数组的变化可以触发视图更新\n      // 如果是 val 数组，修改原型方法 这里就不考虑兼容 ie 了\n      // 这里只针对 data 中的数组，没有重写 Array.prototype 上的方法\n      val.__proto__ = arrayMethod;\n      this.observeArray(val);\n    } else {\n      this.walk(val); // 遍历属性进行劫持\n    }\n  }\n\n  // 递归遍历数组，对数组内部的对象再次重写 比如 [{}]  [[]]\n  // 需要注意的是: 数组套对象的话，修改对象属性，也会触发更新，比如：\n  // vm.arr[0].a = 100 ----> 触发更新\n  // vm.arr[0] = 100   ----> 不会触发更新\n  observeArray(val) {\n    // 调用 observe 方法，数组内元素如果不是对象，则不会劫持\n    val.forEach(itm => observe(itm));\n  }\n\n  // 遍历对象\n  walk(data) {\n    Object.keys(data).forEach(key => {\n      // 使用 defineProperty 重新定义\n      defineReactive(data, key, data[key]);\n    })\n  }\n}\n\n// 对数组里面的数组进行依赖收集\nfunction dependArray(val) {\n  for (let i = 0; i < val.length; i++) {\n    let current = val[i]; // current 是数组里面的数组\n\n    current.__ob__ && current.__ob__.dep.depend(); \n\n    // 递归收集，使闭包内的 Dep 保存 wacher\n    if (Array.isArray(current)) {\n      dependArray(current);\n    }\n  }\n}\n\n// vue2 慢的一个原因\n// 这里引出几条 vue2 的性能优化原则\n//   @1 不要把所有的数据都放在 data 中，闭包过多会损耗性能\n//   @2 尽量扁平化数据，不要嵌套多次，递归影响性能\n//   @3 不要频繁获取数据，会触发 get 方法，走 get 方法中的全部逻辑\n//   @4 如果数据某属性不需要响应式，可以使用 Object.freeze 冻结属性「源码里会跳过 defineReactive」\nfunction defineReactive(obj, key, value) {\n  // 进行劫持(递归) 对象或数组返回 Observer 实例，普通值返回 undefined\n  let childOb = observe(value); \n  let dep = new Dep(); // 给当前变量声明一个 Dep(闭包中保存)，并收集 watcher\n\n  // console.log(childOb, '就是当前数据 Observer 实例');\n\n  Object.defineProperty(obj, key, {\n    get() {\n      // 这里就形成一个闭包，每次执行 defineReactive 上下文都不会被释放\n      // 所以这就是 vue2 的性能瓶颈\n      // console.log(key, 'get 取值啦');\n      if (Dep.target) {\n        // 说明是解析模板内变量 也就是 render 执行时候用到的 vm 中变量取值\n        // console.log('渲染模板内属性', key);\n        // 模板内变量的 Dep 里收集 watcher\n        dep.depend();\n\n        // 数组本身添加 Dep 收集 watcher 去更新(对象也会被添加 Dep，但是对象的 Dep 暂时没有使用哦)\n        // 如果 value 是个普通值，则 childOb 为 undefined\n        if (childOb) { \n          // 让数组和对象也记录 Dep，收集 watcher\n          childOb.dep.depend();\n\n          // 如果当前 value 个数组，需要考虑二维数组的情况，因为某个字段是多维数组，取值只触发最外层数组的一次 get\n          // 比如 hobbys -> [[1, 2, 3]]，我想让 hobbys[0].push('4') 也能更新\n          // 取外层数组要对里面的 item 也行依赖收集 \n          if (Array.isArray(value)) {\n            console.log(value);\n            dependArray(value);\n          }\n        }\n      }\n      \n      return value;\n    },\n    set(newValue) {\n      if (newValue !== value) {\n        // console.log('触发set方法');\n        // 设置新值重新劫持 \n        observe(newValue); \n        value = newValue;\n        // 每个属性的闭包中的 dep 实例\n        dep.notify(); // 告诉当前属性存放的 watcher 执行\n      }\n    }\n  });\n}\n\nexport function observe(data) {\n  // 如果不是对象，直接返回「非对象类型不进行递归劫持」\n  if (!isObject(data)) return;\n\n  // 如果被劫持过，就不再进行劫持了\n  // 劫持过的话，把上次劫持的 Oberver 对象返回\n  if (data.__ob__) {\n    return data.__ob__;\n  };\n\n  // 如果一个数据被劫持过了，就不要重复劫持了，这里用类来实现\n  // 劫持过的对象 把类的实例挂在到 data.__ob__\n  return new Observer(data);\n}","import { observe } from \"./observer\";\nimport Watcher from \"./observer/watcher\";\nimport { isFunction } from \"./utils\";\n\n// 统一的数据的初始化分发\nexport function initState(vm) {\n  const options = vm.$options;\n\n  if (options.data) {\n    initData(vm);\n  }\n\n  if (options.watch) {\n    initWatch(vm, options.watch);\n  }\n}\n\n// 代理 -> 使用 vm.info 取到 vm.data.info「劫持过的 info」\nfunction proxyFn(vm, key, source) {\n  Object.defineProperty(vm, key, {\n    get() {\n      return vm[source][key]\n    },\n    set(newVal) {\n      vm[source][key] = newVal;\n    }\n  });\n}\n\nfunction initData(vm) {\n  // 数据的初始化\n\n  // 注意 data 可能是个对象 也可能是个函数\n  //   + 对象：根实例\n  //   + 函数：页面组件互相之间的数据隔离\n  let data = vm.$options.data;\n\n  // 注意修正 this，防止 data 函数执行 this 指向 window\n  // 把 data 赋值给 vm 实例一个变量上，这里取名 _data，作为实例的属性数据源\n  data = vm._data = isFunction(data) ? data.call(vm) : data;\n\n  // 数据劫持\n  observe(data);\n\n  // 取 data.info => vm._data.info 做了一层代理获取到劫持后的 info\n  // 这也是 vue 中我们可以用 this 访问和修改 data 中数据的原因\n  for (let key in data) {\n    proxyFn(vm, key, '_data');\n  }\n}\n\nfunction initWatch(vm, watch) {\n  for (let key in watch) {\n    let handler = watch[key];\n\n    if (Array.isArray(handler)) { // handler 为数组\n      for (let i = 0; i < handler.length; i++) { \n        // 创建个 watcher 去监听数据变化\n        createWatcher(vm, key, handler[i]);\n      }\n    } else { // handler 为函数\n      createWatcher(vm, key, handler);\n    }\n  }\n}\n\nfunction createWatcher(vm, key, handler) {\n  return vm.$watch(key, handler);\n}\n\n// 把 $watch 扩展到原型上\nexport function stateMixin(Vue) {\n  Vue.prototype.$watch = function(key, handler, options = {}) {\n    options.user = true; // 标识用户自己写的 watcher, 跟渲染 watcher 区分开\n\n    new Watcher(this, key, handler, options);\n  }\n}","\nimport { compileToFunctions } from \"./compiler\";\nimport { mountComponent } from \"./lifecycle\";\nimport { initState } from \"./state\";\nimport { mergeOptions } from \"./utils\";\n\nfunction callHook(vm, hook) {\n  const handlers = vm.$options[hook];\n\n  if (handlers) {\n    // 依次执行生命周期收集的钩子函数\n    for (let i = 0; i < handlers.length; i++) {\n      // 生命周期的 this 也指向当前实例，这就是为什么 vue2 中生命周期能拿到当前组件实例\n      handlers[i].call(vm); \n    }\n  } \n}\n\nexport function initMixin(Vue) {\n  // 后续组件化开发的时候，Vue.extend 可以创造一个子组件，子组件也可以调用 _init 方法\n  Vue.prototype._init = function(options) {\n    const vm = this;\n    \n    // 注意调用的时候是 实例._init, 所以这里的 this 指的是实例本身 \n    // 把用户的配置放到实例上, 这样在其他方法中都可以共享 options 了\n    // 同混入的 Vue.options 做合并(mixin), 注意参数顺序，组件 options 优先替换 全局 options\n    vm.$options = mergeOptions(this.constructor.options, options);\n    // console.warn(vm.$options);\n\n    callHook(vm, 'beforeCreate'); // beforeCreate 在 initState 前执行\n\n    // 因为数据的来源有很多种，比如 data、props、computed 等，我们要做一个统一的数据的初始化『数据劫持』\n    initState(vm);\n\n    if (vm.$options.el) {\n      // 要将数据挂载到页面上『模板解析』\n      // console.log('页面要挂载');\n\n      // 现在数据已经被劫持了，数据变化需要更新视图(diff 算法更新需要更新的部分)\n      // 在 vue2 中，使用的是更符合前端思维的 template 而不是更灵活的 JSX\n      // vue3 template 写起来性能会高一些，内部做了很多优化，所以在 vue3 里面尽量不要使用 jsx\n\n      // 挂载到的 DOM 节点，其实最终用的都是 $mount 方法\n      // 处理 new Vue({ el })  写法\n      vm.$mount(vm.$options.el);\n    } \n  }\n\n  // 挂载节点的方法(如果 options 中不传 el 的话)\n  // 兼容 new Vue({}).$mount(el) 这种写法\n  Vue.prototype.$mount = function(el) {\n    const vm = this;\n    const opts = vm.$options;\n\n    el = document.querySelector(el); // 获取真实节点\n    vm.$el = el; // 真实元素挂载到实例上\n\n    if (!opts.render) {\n      // 模板编译\n      let template = opts.template;\n\n      if (!template && el) {\n        // outerHTML 取得是该元素和其所有子元素序列化后的字符串标签\n        template = el.outerHTML;\n      }\n\n      // compileToFunctions 为模板编译的方法，模板 -> js 对象 -> ast -> render code -> 生成 render 函数\n      let render = compileToFunctions(template); // el 节点本身\n\n      opts.render = render;\n    }\n\n    // opts.render 就是渲染函数\n    // console.warn(opts.render, 'opts.render');\n\n    // 开始组件挂载流程(生命周期方法)，也就是模板解析(变量渲染到dom上)\n    mountComponent(vm, el);\n  }\n}","// 创建虚拟 dom 节点 也就是 render 方法中  _c\nexport function createElement(vm, tag, data = {}, children) {\n  // console.log('createElement 方法', tag, data, children, vm);\n  return vnode(vm, tag, data, data.key, children, undefined); // key 挂在了虚拟dom上哦\n}\n\n // 创建虚拟文本节点 也就是 render 方法中  _v\nexport function createTextElement(vm, text) {\n  // console.log('createTextElement 方法', text, vm);\n  return vnode(vm, undefined, undefined, undefined, undefined, text);\n}\n\n// 虚拟dom (比 ast 数更自由，随意组合属性，哪怕不合法的属性)\nfunction vnode(vm, tag, data, key, children, text) {\n  return {\n    vm, \n    tag, \n    data, \n    key, \n    children,\n    text\n  }\n}","import { createElement, createTextElement } from \"./vdom\";\n\nexport function renderMixin(Vue) {\n  // 创建 render 函数需要的三个方法\n  Vue.prototype._c = function(tagName, data, ...children) { // createElement\n    const vm = this;\n\n    return createElement(vm, tagName, data, children);\n  }\n\n  Vue.prototype._v = function(text) { // createTextElement\n    const vm = this;\n\n    return createTextElement(vm, text);\n  }\n\n  // 转字符串\n  Vue.prototype._s = function(val) {\n    if (typeof val === 'object') return JSON.stringify(val);\n    return val;\n  }\n\n  // 把 vm.$options 上的 render 方法 挂载到原型链\n  Vue.prototype._render = function() {\n    const vm = this;\n\n    // 就是我们通过 ast 生成的 render 方法(或者原本就传了 render 方法)\n    let render = vm.$options.render;\n    \n    let vnode = render.call(vm);\n    \n    return vnode;\n  }\n}","import { initGlobalAPI } from './initGlobalAPI';\nimport { initMixin } from './initMixin'; \nimport { lifecycleMixin } from './lifecycle';\nimport { renderMixin } from './render';\nimport { stateMixin } from './state';\n\nfunction Vue(options) {\n  this._init(options);\n}\n\n// vue 增加静态方法，mixin 之类的\ninitGlobalAPI(Vue); \n\n// 在 Vue 原型链上扩展初始化方法(init, $mount 等)\ninitMixin(Vue);\n\n// 原型链挂载 _render -> 生成虚拟 dom 方法\nrenderMixin(Vue);\n\n// 原型链挂载 _update -> 生成真实 dom 方法\nlifecycleMixin(Vue);\n\n// 扩展原型 $watcher 方法\nstateMixin(Vue);\n\nexport default Vue;"],"names":["isFunction","val","isObject","isArray","Object","prototype","toString","call","callbacks","wating","flushCallbacks","forEach","cb","timer","timerFn","Promise","resolve","then","MutationObserver","textNode","document","createTextNode","observe","characterData","textContent","setImmediate","setTimeout","nextTick","push","strats","method","curVal","mixinVal","concat","mergeOptions","curOptions","mixinOptions","res","key","mergeField","hasOwnProperty","console","warn","data","initGlobalAPI","Vue","options","mixin","defaultTagRE","genProps","attrs","str","i","length","attr","name","styleObj","value","replace","arguments","JSON","stringify","slice","gen","node","type","generate","text","test","tokens","match","lastIdx","lastIndex","exec","startIdx","index","trim","join","genChildren","children","map","c","astRoot","code","tag","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","createAstElement","tagName","parent","root","stack","start","element","end","last","pop","Error","chars","parserHTML","html","advance","len","substring","parseStartTag","startOrEnd","indexOf","startTagMatch","endTagMatch","compileToFunctions","render","Function","id","Dep","constructor","subs","depend","target","addDep","addSub","watcher","notify","update","pushTarget","popTarget","queue","has","pending","flushSchedulerQueue","run","queueWatcher","log","Watcher","vm","exprOrFn","user","deps","depsId","Set","getter","path","split","obj","get","dep","add","newValue","oldValue","patch","curElm","vnode","nodeType","parentElm","parentNode","newElm","createElm","insertBefore","nextSibling","removeChild","elm","createElement","child","appendChild","lifecycleMixin","_update","vdom","$el","$nextTick","mountComponent","el","updataComponent","_render","oldArrayPrototype","Array","arrayMethod","create","methods","args","inserted","ob","__ob__","observeArray","Observer","defineProperty","enumerable","__proto__","walk","itm","keys","defineReactive","dependArray","current","childOb","set","initState","$options","initData","watch","initWatch","proxyFn","source","newVal","_data","handler","createWatcher","$watch","stateMixin","callHook","hook","handlers","initMixin","_init","$mount","opts","querySelector","template","outerHTML","undefined","createTextElement","renderMixin","_c","_v","_s"],"mappings":"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"}